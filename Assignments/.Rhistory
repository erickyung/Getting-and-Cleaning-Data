find.package("devtools")
a <- available.packages()
head(rownames(a), 3)
install.packages("slidify")
install.packages(c("ggplot2", "devtools"))
source("http://bioconductor.org/bioLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("GenomicFeatures", "AnnotationDbi"))
find.package("devtools")
install.packages("devtools")
find_rtools()
library(devtools)
find_rtools()
find.package("KernSmooth")
install.package("KernSmooth")
install.packages("KernSmooth")
library("KernSmooth")
load("C:\\Users\\hdung\\Desktop\\R-Programming\\.RData")
data
q()
x <- c(1,3,5)
y <- c(3,2,10)
c <- cbind(x,y)
c
class(c)
x <- c(17,14,4,5,13,12,10)
load("C:\\Users\\hdung\\Desktop\\R-Programming\\.RData")
data
ozone <- data[["Ozone"]]
ozone
class(ozone)
ozone[is.na(ozone)]
length(ozone[is.na(ozone)])
q()
install.packages("swirl")
library(swirl)
ls()
install.packages("swirl")
rm(list=ls())
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,
| 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my
my_
main()
bye()
q()
library(swirl)
ls()
rm(list=ls())
swirl()
my_div
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each =
| 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Eric")
my_name
paste(my_name, collapse = " ")
paste("Hello", "World!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "C"), sep = "")
paste(c("X", "Y", "C"), 1:3, sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matix, my_matrix2)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames(my_data) <- cnames
my_data
bye()
q()
x <- matrix(rnorm(200), 20, 10)
x
apply(x, 1, quantile, probs = c(0.25, 0.75))
apply(x, 2, quantile, probs = c(0.25, 0.75))
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
tapplyx, f, mean)
tapply(x, f, mean)
tapply(x, f, mean, simplify = FALSE)
tapply(x, f, range, simplify = FALSE)
tapply(x, f, range)
split(x, f)
q()
set.seed(1)
rpois(5, 2)
q()
install.packages(c("httr"))
q()
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "7581b29871269a714fa7")
class(myapp)
gtoken <- config(token = github_token)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages(c("httpuv"))
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app("github", "7581b29871269a714fa7")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github <- oauth_endpoints("https://api.github.com/users/jtleek/repos")
github <- oauth_endpoints("github")
myapp <- oauth_app("Getting and Cleaning Data", key="7581b29871269a714fa7", secret = "884ff559ea80bdf56c94b7eb0e738faf51abc15f")
github_token <- oauth2.0_token(github, myapp)
github <- oauth_endpoints("github")
myapp <- oauth_app("github", key="aafb404285d13a45c690", secret = "d15a899417031582c647e5fd8c086ecf485303cf")
github_token <- oauth2.0_token(github, myapp)
github <- oauth_endpoints("github")
myapp <- oauth_app(github, key="aafb404285d13a45c690", secret = "d15a899417031582c647e5fd8c086ecf485303cf")
github_token <- oauth2.0_token(github, myapp)
github <- oauth_endpoints("github")
myapp <- oauth_app("github", "aafb404285d13a45c690", "d15a899417031582c647e5fd8c086ecf485303cf")
github_token <- oauth2.0_token(github, myapp)
github <- oauth_endpoints("github")
myapp <- oauth_app(github, "aafb404285d13a45c690", "d15a899417031582c647e5fd8c086ecf485303cf")
github_token <- oauth2.0_token(github, myapp)
github <- oauth_endpoints("https://github.com")
github <- oauth_endpoints("https://github.com/login/oauth/authorize")
github <- oauth_endpoints("github")
myapp <- oauth_app("github", "aafb404285d13a45c690", "d15a899417031582c647e5fd8c086ecf485303cf")
github_token <- oauth2.0_token(github, myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
names(content(req))
class(content(req))
cont <- content(req)
cont
length(cont)
cont[which(cont %in% c("datasharing"))]
item <- cont[which(cont %in% c("datasharing"))]
item
length(item)
match("datasharing", cont)
cont$owner
toJSON(cont, pretty=TRUE)
library(jsonlite)
toJSON(cont, pretty=TRUE)
jsonData <- toJSON(cont, pretty=TRUE)
names(jsonData)
jsonData
jsonData$owner
class(jsonData)
class(jsonData$owner)
names(jsonData$owner)
cont
jsonData <- toJSON(jsonData, pretty=TRUE)
jsonData <- fromJSON(jsonData)
class(jsonData)
req
cont
cont <- content(req)
library(jsonlite)
cont
jsonContent <- toJSON(cont, pretty = TRUE)
jsonContent
jsonData <- fromJSON(jsonContent)
jsonData
names(jsonData)
jsonData$owner.url
jsonData[["owner.url"]]
jsonData$owner
jsonData$owner$url
jsonData$owner$repos_url
jsonData
jsonData$name
jsonData[[5]]
jsonData$name
jsonData[5]
jsonData[[5]]
jsonData[[name]]
jsonData[["name"]]
jsonData["name"]
jsonData$5
jsonData(50
jsonData(50)
jsonData[5]
jsonData[5, ]
class(jsonData[5, ])
names(jsonData[5, ])
jsonData[5, ]["created_at"]
jsonData[which(jsonData$name = "datasharing")]
jsonData[which(jsonData$name == "datasharing")]
jsonData[jsonData$name = "datasharing", ]
jsonData[jsonData$name == "datasharing", ]
names(jsonData[jsonData$name == "datasharing", ])
jsonData[jsonData$name == "datasharing", ][["created_at"]]
install.packages(c("sqldf"))
q()
setwd("C:/Users/hdung/Desktop/Getting and Cleaning Data")
load("C:/Users/hdung/Desktop/Getting and Cleaning Data/.RData")
if (!file.exists("./idahohousing4_1.csv")) {
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl1, destfile = "./idahohousing4_1.csv")
dateDownloadedfileUrl1 <- date()
}
idahohousingData <- read.table("./idahohousing4_1.csv", sep = ",", header = TRUE)
names(idahohousingData)
strsplit(names(idahohousingData), "wgtp")
class(strsplit(names(idahohousingData), "wgtp"))
strsplit(names(idahohousingData), "wgtp")[123]
class(strsplit(names(idahohousingData), "wgtp")[123])
if (!file.exists("./GDPdata4_2.csv")) {
fileUrl3.1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl3.1, destfile = "./GDPdata4_2.csv")
dateDownloadedfileUrl3.1 <- date()
}
gdpData <- read.csv("./GDPdata4_2.csv", skip = 4, nrows = 190)
gdpData
gdpData$X.4
gsub(",", "", gdpData$X.4)
as.numeric((gsub(",", "", gdpData$X.4))
)
as.numeric(gsub(",", "", gdpData$X.4))
mean(as.numeric(gsub(",", "", gdpData$X.4)))
gdpData
grep("^United", gdpData$X.3)
if (!file.exists("./GDPdata4_2.csv")) {
fileUrl4.4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl4.2, destfile = "./GDPdata4_2.csv")
dateDownloadedfileUrl4.2 <- date()
}
gdpData <- read.csv("./GDPdata4_2.csv", skip = 4, nrows = 190)
mean(as.numeric(gsub(",", "", gdpData$X.4)))
if (!file.exists("./educationaldata4_4.csv")) {
fileUrl4.4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl4.4, destfile = "./educationaldata.csv")
dateDownloadedfileUrl4.4 <- date()
}
educationalData <- read.csv("./educationaldata4_4.csv")
if (!file.exists("./educationaldata4_4.csv")) {
fileUrl4.4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl4.4, destfile = "./educationaldata4_4.csv")
dateDownloadedfileUrl4.4 <- date()
}
educationalData <- read.csv("./educationaldata4_4.csv")
mergedData <- merge(gdpData, educationalData, by.x = "X", by.y = "CountryCode", all = FALSE)
mergedData
names(mergedData)
gdpData
educationalData
head(educationalData)
gdpData
if (!file.exists("./GDPdata4_2.csv")) {
fileUrl4.4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl4.2, destfile = "./GDPdata4_2.csv")
dateDownloadedfileUrl4.2 <- date()
}
if (!file.exists("./GDPdata4_2.csv")) {
fileUrl4.2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl4.2, destfile = "./GDPdata4_2.csv")
dateDownloadedfileUrl4.2 <- date()
}
gdpData <- read.csv("./GDPdata4_2.csv", skip = 4, nrows = 190)
gdpData
mean(as.numeric(gsub(",", "", gdpData$X.4)))
names(educationalData0
)
names(educationalData)
nrows(educationalData)
nrow(educationalData)
nrow(mergedData)
mergedData$Special.Notes
grep("[Ff]iscal year end: [Jj]une", mergedData$Special.Notes)
class(grep("[Ff]iscal year end: [Jj]une", mergedData$Special.Notes))
length(grep("[Ff]iscal year end: [Jj]une", mergedData$Special.Notes))
library(quantmod)
amzn = getSymbols("AMZN", auto.assign = FALSE)
sampleTimes = index(amzn)
install.packages(c("quantmod"))
library(quantmod)
amzn = getSymbols("AMZN", auto.assign = FALSE)
sampleTimes = index(amzn)
amzn <- getSymbols("AMZN", auto.assign = FALSE)
sampleTimes <- index(amzn)
sampleTimes
amzn
names(amzn)
names(sampleTimes)
nrow(amzn)
length(sampleTimes)
class(sampleTimes)
head(sampleTimes)
format(sampleTimes, "%Y")
class(format(sampleTimes, "%Y")0
class(format(sampleTimes, "%Y"))
grep("2012", format(sampleTimes, "%Y"))
length(grep("2012", format(sampleTimes, "%Y")))
sampleTimes$Year <- format(sampleTimes, "%Y")
sampleTimes
sampleTimes <- index(amzn)
data.frame(date = sampleTimes, year = format(sampleTimes, "%Y"))
sampleTimesDF <- data.frame(date = sampleTimes, year = format(sampleTimes, "%Y"))
length(grep("2012", sampleTimesDF$year))
format(sampleTimes, "%A")
sampleTimesDF <- data.frame(date = sampleTimes, year = format(sampleTimes, "%Y", dayofweek = format(sampleTimes, "%A")))
length(grep("2012", sampleTimesDF$year))
head(sampleTimesDF)
sampleTimesDF <- data.frame(date = sampleTimes, year = format(sampleTimes, "%Y", dayofweek = format(sampleTimes, "%A")))
length(grep("2012", sampleTimesDF$year))
head(sampleTimesDF)
sampleTimesDF <- data.frame(date = sampleTimes, year = format(sampleTimes, "%Y"), dayofweek = format(sampleTimes, "%A"))
length(grep("2012", sampleTimesDF$year))
head(sampleTimesDF)
which(1:10 > 3, arr.ind = TRUE)
which(1:10 > 3, arr.ind = FALSE)
which(1:10 > 3)
which(sampleTimesDF$year == "2012" && sampleTimesDF$dayofweek == "Monday")
which(sampleTimesDF$year == "2012" & sampleTimesDF$dayofweek == "Monday")
class(which(sampleTimesDF$year == "2012" & sampleTimesDF$dayofweek == "Monday"))
length(which(sampleTimesDF$year == "2012" & sampleTimesDF$dayofweek == "Monday"))
